/**
 * @fileoverview Firestore Security Rules for the MARCUS Automation Suite.
 *
 * Core Philosophy: This ruleset provides open access to most data while ensuring that authorization logic can be added in the future if necessary.
 *
 * Data Structure:
 * - Top-level collections like `/metro_codes`, `/contractor_types`, `/projects`, `/rfps`, `/proposals`, `/scorecards`, `/technical_documents`, `/feedbacks`, and `/stakeholders` are used to store application data.
 *
 * Key Security Decisions:
 * - Unauthenticated access is allowed for all `get` and `list` operations on all collections.
 * - No write access is granted by default and writes are disabled using `allow create, update, delete: if false;`.
 * - This configuration prioritizes rapid prototyping and open access, providing a foundation for implementing more fine-grained access control later.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read metro code data. Write operations are disabled.
     * @path /metro_codes/{metroCodeId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /metro_codes/{metroCodeId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read contractor type data. Write operations are disabled.
     * @path /contractor_types/{contractorTypeId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /contractor_types/{contractorTypeId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read project data. Write operations are disabled.
     * @path /projects/{projectId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /projects/{projectId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read RFP data. Write operations are disabled.
     * @path /rfps/{rfpId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /rfps/{rfpId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read proposal data. Write operations are disabled.
     * @path /proposals/{proposalId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /proposals/{proposalId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read scorecard data. Write operations are disabled.
     * @path /scorecards/{scorecardId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /scorecards/{scorecardId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read technical document data. Write operations are disabled.
     * @path /technical_documents/{technicalDocumentId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /technical_documents/{technicalDocumentId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read feedback data. Write operations are disabled.
     * @path /feedbacks/{feedbackId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /feedbacks/{feedbackId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read stakeholder data. Write operations are disabled.
     * @path /stakeholders/{stakeholderId}
     * @allow (get, list) Read access is allowed for all users.
     * @deny (create, update, delete) Write access is always denied.
     * @principle Public read access with no write access.
     */
    match /stakeholders/{stakeholderId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}